---
title: Критические изменения
introduction: >
  Новые версии Sass максимально обратно совместимы, но иногда требуется серьезное изменение.
  Sass должен идти в ногу с развивающейся спецификацией CSS, и иногда необходимо исправлять ошибки проектирования старых языков.
overview: true
---

Перед выпуском каждого критического изменения реализации Sass будут выдавать предупреждения об устаревании для таблиц стилей, поведение которых изменится.
По возможности, эти предупреждения будут включать предложения по обновлению устаревших стилей, чтобы сделать их совместимыми с будущими версиями.

В разных реализациях действуют разные политики в отношении критических изменений и прекращения поддержки.
[Dart Sass][] будет выдавать предупреждения об устаревании в течение как минимум трех месяцев перед выпуском критического изменения и выпускает критическое изменение с новым номером основной версии, **если это изменение не требуется для совместимости с CSS**.
Изменения совместимости CSS часто бывают неразрывными и чувствительными ко времени, поэтому вместо этого они могут быть выпущены с новыми дополнительными номерами версий.

[Dart Sass]: /dart-sass

Эти критические изменения скоро появятся или были выпущены недавно:

* [Functions are stricter about which units they
  allow](breaking-changes/function-units) beginning in Dart Sass 1.32.0.

* [Selectors with invalid combinators are
  invalid](breaking-changes/bogus-combinators) beginning in Dart Sass 1.54.0.

* [`/` заменяет операцию деления на разделитель списка](breaking-changes/slash-div) начиная с Dart Sass 1.33.0.

* [Parsing the special syntax of `@-moz-document` will be
  invalid](breaking-changes/moz-document) beginning in Dart Sass 1.7.2.

* [Составные селекторы не могут быть расширены](breaking-changes/extend-compound) в Dart Sass 1.0.0 и Ruby Sass 4.0.0.

* [Синтаксис значений пользовательских свойств CSS изменен](breaking-changes/css-vars) в Dart Sass 1.0.0, LibSass 3.5.0 и Ruby Sass 3.5.0.
