---
title: "Критическое изменение: Синтаксис переменных CSS"
introduction: >
  Более старые версии LibSass и Ruby Sass анализировали объявления настраиваемых свойств так же, как и любое другое объявление свойств, позволяя использовать в качестве значений полный диапазон [выражений SassScript](../syntax/structure#expressions).
  Но это было несовместимо с CSS.
---

<% impl_status dart: true, libsass: '3.5.0', ruby: '3.5.0' %>

Спецификация CSS позволяет использовать почти любую строку символов в объявлении настраиваемого свойства.
Несмотря на то, что эти значения могут не иметь смысла для какого-либо свойства CSS, к ним можно получить доступ из JavaScript.
Когда они были проанализированы как значения SassScript, синтаксис, который был бы допустимым простым CSS, не удалось проанализировать.
Например, [библиотека полимеров][Polymer library] использовала это для поддержки примесей простого CSS:

[Polymer library]: https://polymer-library.polymer-project.org/3.0/docs/devguide/custom-css-properties#use-custom-css-mixins

<% example(syntax: :scss) do %>
  :root {
    --flex-theme: {
      border: 1px solid var(--theme-dark-blue);
      font-family: var(--theme-font-family);
      padding: var(--theme-wide-padding);
      background-color: var(--theme-light-blue);
    };
  }
  ===
  :root {
    --flex-theme: {
      border: 1px solid var(--theme-dark-blue);
      font-family: var(--theme-font-family);
      padding: var(--theme-wide-padding);
      background-color: var(--theme-light-blue);
    };
  }
<% end %>

Чтобы обеспечить максимальную совместимость с простым CSS, более поздние версии Sass требуют, чтобы выражения SassScript в значениях пользовательских свойств были записаны в пределах [интерполяции](../interpolation). Интерполяция также будет работать для старых версий Sass, поэтому рекомендуется для всех таблиц стилей.

<% example do %>
  $accent-color: #fbbc04;

  :root {
    // WRONG, will not work in recent Sass versions.
    --accent-color-wrong: $accent-color;

    // RIGHT, will work in all Sass versions.
    --accent-color-right: #{$accent-color};
  }
  ===
  $accent-color: #fbbc04

  :root
    // WRONG, will not work in recent Sass versions.
    --accent-color-wrong: $accent-color

    // RIGHT, will work in all Sass versions.
    --accent-color-right: #{$accent-color}
  ===
  :root {
    --accent-color-wrong: $accent-color;
    --accent-color-right: #fbbc04;
  }
<% end %>

<% heads_up do %>
  Поскольку интерполяция удаляет кавычки из строк в кавычках, может потребоваться заключить их в [функцию `meta.inspect()`][`meta.inspect()` function], чтобы сохранить их кавычки.

  [`meta.inspect()` function]: ../modules/meta#inspect

  <% example do %>
    @use "sass:meta";

    $font-family-monospace: Menlo, Consolas, "Courier New", monospace;

    :root {
      --font-family-monospace: #{meta.inspect($font-family-monospace)};
    }
    ===
    @use "sass:meta"

    $font-family-monospace: Menlo, Consolas, "Courier New", monospace

    :root
      --font-family-monospace: #{meta.inspect($font-family-monospace)}
    ===
    :root {
      --font-family-monospace: Menlo, Consolas, "Courier New", monospace;
    }
  <% end %>
<% end %>
