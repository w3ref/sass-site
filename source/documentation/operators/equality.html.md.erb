---
title: Операторы равенства
---

<% impl_status dart: true, libsass: false, ruby: '4.0.0 (unreleased)', feature: "Unitless Equality" do %>
  LibSass и более старые версии Ruby Sass считают числа без единиц измерения равными тем же числам с любыми единицами измерения.
  Это поведение устарело и было удалено из более поздних выпусков, поскольку оно нарушает [транзитивность][transitivity].

  [transitivity]: https://en.wikipedia.org/wiki/Transitive_relation
<% end %>

Операторы равенства возвращают, совпадают ли два значения.
Они записываются как `<expression> == <expression>`, которое возвращает, равны ли два [выражения][expressions] и `<expression> != <expression>`, которое возвращает, являются ли два выражения *не* равными.
Два значения считаются равными, если они одного типа *и* одного и того же значения, что означает разные вещи для разных типов:

[expressions]: ../syntax/structure#expressions

* [Числа][Numbers] равны, если они имеют одинаковое значение *и* одинаковые единицы измерения, или если их значения равны, когда их единицы конвертируются между собой.
* [Строки][Strings] необычны тем, что строки [без кавычек][unquoted] и [в кавычках][quoted] с одинаковым содержимым считаются равными.
* [Цвета][Colors] равны, если они имеют одинаковые значения красного, зеленого, синего и альфа-канала.
* [Списки][Lists] равны, если их содержимое одинаково. Списки, разделенные запятыми, не равны спискам, разделенным пробелами, а списки в квадратных скобках не равны спискам без квадратных скобок.
* [Карты][Maps] равны, если их ключи и значения равны.
* [`true`, `false`][] и [`null`][] равны только самим себе.
* [Функции][Functions] эквивалентны одной и той же функции. Функции сравниваются *по ссылке*, поэтому, даже если две функции имеют одинаковое имя и определение, они считаются разными, если они не определены в одном месте.

[Numbers]: ../values/numbers
[Strings]: ../values/strings
[quoted]: ../values/strings#quoted
[unquoted]: ../values/strings#unquoted
[Colors]: ../values/colors
[Lists]: ../values/lists
[`true`, `false`]: ../values/booleans
[`null`]: ../values/null
[Maps]: ../values/maps
[Functions]: ../values/functions

<% example(autogen_css: false) do %>
  @debug 1px == 1px; // true
  @debug 1px != 1em; // true
  @debug 1 != 1px; // true
  @debug 96px == 1in; // true

  @debug "Helvetica" == Helvetica; // true
  @debug "Helvetica" != "Arial"; // true

  @debug hsl(34, 35%, 92.1%) == #f2ece4; // true
  @debug rgba(179, 115, 153, 0.5) != rgba(179, 115, 153, 0.8); // true

  @debug (5px 7px 10px) == (5px 7px 10px); // true
  @debug (5px 7px 10px) != (10px 14px 20px); // true
  @debug (5px 7px 10px) != (5px, 7px, 10px); // true
  @debug (5px 7px 10px) != [5px 7px 10px]; // true

  $theme: ("venus": #998099, "nebula": #d2e1dd);
  @debug $theme == ("venus": #998099, "nebula": #d2e1dd); // true
  @debug $theme != ("venus": #998099, "iron": #dadbdf); // true

  @debug true == true; // true
  @debug true != false; // true
  @debug null != false; // true

  @debug get-function("rgba") == get-function("rgba"); // true
  @debug get-function("rgba") != get-function("hsla"); // true
  ===
  @debug 1px == 1px  // true
  @debug 1px != 1em  // true
  @debug 1 != 1px  // true
  @debug 96px == 1in  // true

  @debug "Helvetica" == Helvetica  // true
  @debug "Helvetica" != "Arial"  // true

  @debug hsl(34, 35%, 92.1%) == #f2ece4  // true
  @debug rgba(179, 115, 153, 0.5) != rgba(179, 115, 153, 0.8)  // true

  @debug (5px 7px 10px) == (5px 7px 10px)  // true
  @debug (5px 7px 10px) != (10px 14px 20px)  // true
  @debug (5px 7px 10px) != (5px, 7px, 10px)  // true
  @debug (5px 7px 10px) != [5px 7px 10px]  // true

  $theme: ("venus": #998099, "nebula": #d2e1dd)
  @debug $theme == ("venus": #998099, "nebula": #d2e1dd)  // true
  @debug $theme != ("venus": #998099, "iron": #dadbdf)  // true

  @debug true == true  // true
  @debug true != false  // true
  @debug null != false  // true

  @debug get-function("rgba") == get-function("rgba")  // true
  @debug get-function("rgba") != get-function("hsla")  // true
<% end %>
